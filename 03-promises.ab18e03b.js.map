{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,uBACjCC,EAASF,SAASC,cAAc,sBAChCE,EAAWH,SAASC,cAAc,wBAuBxC,SAASG,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA/BDN,SAASC,cAAc,UAE/Ba,iBAAiB,UAErB,SAAqBC,GACnBA,EAAEC,iBACF,IAAIC,EAAQC,OAAOnB,EAAQoB,OAE3BN,YAAW,KACT,IAAK,IAAIO,EAAI,EAAGA,GAAKjB,EAASgB,MAAOC,GAAK,EACxChB,EAAcgB,EAAGH,GACdI,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBT,EAAAyB,OAAOC,QAAQ,uBAAqBlB,QAAiBC,MAAU,IAEhEkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBT,EAAAyB,OAAOG,QAAQ,sBAAoBpB,QAAiBC,MAAU,IAElEW,GAASC,OAAOhB,EAAOiB,M,GAExBF,E,IAgBLb,EAAc,EAAG,MACdiB,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBT,EAAAyB,OAAOC,QAAQ,uBAAqBlB,QAAiBC,MAAU,IAEhEkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBT,EAAAyB,OAAOG,QAAQ,sBAAoBpB,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nconst btn = document.querySelector('button');\n\nbtn.addEventListener('submit', onSubmitBtn);\n\nfunction onSubmitBtn(e) {\n  e.preventDefault();\n  let delay = Number(delayEl.value);\n\n  setTimeout(() => {\n    for (let i = 1; i <= amountEl.value; i += 1) {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      delay += Number(stepEl.value);\n    }\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(1, 1500)\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$delayEl","document","querySelector","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.ab18e03b.js.map"}